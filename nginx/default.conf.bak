server {
    listen       80;
    server_name  localhost discuz.com 3g.discuz.com bbs.discuz.com;

    charset gbk;
    #access_log  /var/log/nginx/host.access.log  main;
    error_log  /usr/share/nginx/mykj/error.log;
    
    root /usr/share/nginx/mykj/cmd;#我的框架项目

    # $uri包含请求的文件名和路径，不包含包含“?”或“#”等参数。所以这样代理过去的时候apache中的php $_GET\$_POST是空的 
    # http://www.alipay.com/alipay/index.html  => $uri：/alipay/index.html

    #$request_uri包含请求的文件名和路径及所有参数
    # http://www.alipay.com/alipay/index.html#  => $uri：/alipay/index.html#

    #$query_string表示 请求路径?后面的所有参数

    #以某常规的字符串开头匹配,满足百度编辑器上传效果
    location ^~ /static/admin/lib/editor/gbk/php/controller.php{
	client_max_body_size   26m;
 #上视频大小 需要配合php.ini post_max_size = 26M || upload_max_filesize = 26M
proxy_pass http://172.100.100.93/$uri?$query_string; #http://discuz.com/static/admin/lib/editor/php/controller.php?id=1&prm=2
        proxy_set_header Host $http_host;
	proxy_set_header REMOTE_ADDR $remote_addr;
	
	
	 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	 proxy_set_header Scheme $scheme;
         proxy_set_header SERVER_PORT $server_port;
         
         proxy_set_header Upgrade $http_upgrade;
	 proxy_http_version 1.1;
         proxy_set_header Connection "keep-alive";
    }
   
    index  index.php index.html;
    #autoindex  on; #默认是关闭的，目录浏览功能

    #php框架只有一个入口文件index.php
    location / {
	
	#rewrite ^/$  /Home/Index.html permanent;

	#try_files  $uri $uri/ /index.php/Home/Index;#内部重定向循环,因为nginx与apache共享目录
	
	try_files  $uri $uri/ @apache;
        # index  index.html index.htm;
	# 当输入域名的时候，转向http://xxx.com/index.php/Home/Index   
	
	# 标志位 => last 相当于 Apache 里的[L]标记，表示完成 rewrite
	# last 如果在 location 下用的话，对于重写后的 URI 会对其所在的server{}重新匹配 location
	# break 反之

	#-f 如果文件存在，而且是文件
        #if (!-f $request_filename) {
        #     proxy_pass http://127.0.0.1:9501;
        # }

	#如果不存在转向访问首页 index.php
	#if (!-f $request_filename){
	#	rewrite (.*) /index.php/Home/Index last;
	#}

    }

	

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    #location = /50x.html {
       # root   /usr/share/nginx/html;
    #}

    #注意这里的匹配是apache , 不需要正则重写，只要访问浏览器，nginx不存在的资源都进来apache,
    location @apache{
	proxy_pass   http://172.100.100.93/index.php$uri?$query_string; #http://discuz.com/index.php/Home/Index.html?id=1&prm=2
        proxy_set_header Host $http_host;

	#获取客户端真实IP
	proxy_set_header REMOTE_ADDR $remote_addr;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header REMOTE-HOST $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	 #proxy_set_header X-Forward-For $remote_addr;
	
	 
	 proxy_set_header Scheme $scheme;
         proxy_set_header SERVER_PORT $server_port;
         
         proxy_set_header Upgrade $http_upgrade;
	 proxy_http_version 1.1;
         proxy_set_header Connection "keep-alive";
	
	 # IF https
         # proxy_set_header HTTPS "on";

         #proxy_set_header Connection $connection_upgrade;
	  
	 # proxy_set_header X-Forward-For $remote_addr;

	 # proxy_redirect default;
	 # proxy_set_header Host $http_host:$server_port;
	 # proxy_set_header Host  $host:$proxy_port;
    }

   location ~* ^.+\.(jpg|jpeg|gif|png|swf|rar|zip|css|js)$ {
	access_log off;
	expires -1;
	break;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #区分大小写的正则匹配
   # location ~ \/([A-Z][a-z]+)\{2\}(/\w*)*\.html$ {
	# proxy_pass   http://172.100.100.93/index.php$uri; 
	 
   # }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    location ~ \.php$ {
   
	 rewrite ^ /@php; #跳转到一个网站根目录不存的文件，然后在转向@apache
    #    root           /usr/share/nginx/html;
    #    fastcgi_pass   172.100.100.90:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}